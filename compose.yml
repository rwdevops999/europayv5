name: europay

services:
  proxy:
    image: traefik:v3.5
    container_name: proxy
    command:
      - --providers.docker=true
      - --api=true
      - --api.dashboard=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
    ports:
      - 80:80
      - 6000:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
  postgres:
    image: postgres
    container_name: postgres
    depends_on:
      - proxy
    restart: always
    environment:
      - POSTGRES_HOST_AUTH_METHOD=trust
      - POSTGRES_DB=europay_db
      - POSTGRES_PASSWORD=admin
      - POSTGRES_USER=postgres
    ports:
      - 2345:5432
    volumes:
      - postgres:/var/lib/postgres/data
    labels:
      - "traefik.enable=true"
      # routers
      # - "traefik.tcp.routers.postgres.rule=HostSNI(`*`)"
      # - "traefik.tcp.routers.postgres.entrypoints=tcp"
      # - "traefik.tcp.routers.postgres.service=postgres"
      # services (needed for TCP)
      # - "traefik.tcp.services.postgres.loadbalancer.server.port=5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d europay_db -U postgres"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
  #   liquibase:
  #     image: liquibase
  #     container_name: liquibase
  #     volumes:
  #       - /Users/rudiwelter/Workdir/Tut-O-Pedia/Backend/src/main/resources/db/:/db/
  #     depends_on:
  #       postgres:
  #         condition: service_healthy
  #     # command: /bin/bash -c "sleep infinity"
  #     command: --url=jdbc:postgresql://postgres:5432/tutopedia_db --search-path=/db/ --changeLogFile=db.changelog-master.xml --username=postgres --password=admin update

  #   backend:
  #     image: rwdevops999/topbackend:latest
  #     container_name: backend
  #     environment:
  #       - db_user=postgres
  #       - db_password=admin
  #       - db_host=postgres
  #       - db_port=5432
  #       - db_database=tutopedia_db
  #     ports:
  #       - 8081:8081
  #     labels:
  #       traefik.http.routers.backend.rule: Host(`localhost`) && (PathPrefix(`/api`) || (PathPrefix(`/api/settings`)) || (PathPrefix(`/api/bucket`)))
  #       traefik.http.services.backend.loadbalancer.server.port: 8081
  #     volumes:
  #       - ~/.oci/:/root/.oci/
  #       - ${HOME}/.m2/:/root/.m2/
  #     # command: /bin/bash -c "sleep infinity"
  #     depends_on:
  #       liquibase:
  #         condition: service_completed_successfully

  #     command: /bin/bash -c "echo "BACKEND" &&
  #       export spring_profiles_active=docker &&
  #       ./mvnw spring-boot:run"

  # frontend:
  #   # image: rwdevops999/topfrontend:latest
  #   image: rwdevops999/europay:latest
  #   container_name: frontend
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  #   ports:
  #     - 3000:3000
  #   labels:
  #     traefik.http.routers.client.rule: Host(`localhost`)
  #     traefik.http.services.client.loadbalancer.server.port: 3000

volumes:
  postgres:
